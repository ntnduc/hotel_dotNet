{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useRef } from 'react';\nconst useRequest = () => {\n  _s();\n  const requestConfig = useRef({\n    headers: {\n      'content-type': 'application/json; charset=utf-8'\n    }\n  });\n  const post = async (url, data, config) => {\n    const result = await axios.post(url, data, {\n      ...requestConfig,\n      ...config\n    }).then(res => {\n      return {\n        ...res.data\n      };\n    });\n    return result;\n  };\n  const get = async (url, config) => {\n    const result = await axios.get(url, {\n      ...requestConfig.current,\n      ...config\n    }).then(res => {\n      return {\n        ...res.data\n      };\n    });\n    return result;\n  };\n  return {\n    get,\n    post\n  };\n};\n_s(useRequest, \"/ZHER8kz+VGSpepbNbwtC5IKJhE=\");\nexport default useRequest;","map":{"version":3,"names":["axios","useRef","useRequest","_s","requestConfig","headers","post","url","data","config","result","then","res","get","current"],"sources":["/Users/nguyentrannhatduc/Documents/Github/hotel_dotNet/front-end/src/common/customHook/useRequest.tsx"],"sourcesContent":["import { AxiosRequestConfig } from 'axios';\nimport axios from 'axios';\nimport { useRef } from 'react';\n\nexport interface ApiResponse<T = unknown> {\n    success: boolean,\n    error?: boolean,\n    messsage: string,\n    result?: T,\n    totalCount?: number,\n    [key: string]: unknown\n}\n\ninterface IUseRequest {\n    get: <T = unknown>(url:string, config?: AxiosRequestConfig) => Promise<ApiResponse<T>>,\n    post: <T = unknown>(url: string, data: unknown, config?: AxiosRequestConfig) => Promise<ApiResponse<T >>\n}\n\nconst useRequest = (): IUseRequest => {\n    const requestConfig = useRef<AxiosRequestConfig>({\n        headers: {\n            'content-type': 'application/json; charset=utf-8',\n        }\n    });\n\n    const post = async<T = unknown>(url: string, data: unknown, config?: AxiosRequestConfig) => {\n        const result = await axios.post(url, data, { ...requestConfig, ...config }).then((res: AxiosRequestConfig) => {\n            return {\n                ...res.data\n            } as ApiResponse<T>;\n        });\n        return result;\n    };\n\n    const get = async<T = unknown>(url: string, config?: AxiosRequestConfig) => {\n        const result = await axios.get(url, { ...requestConfig.current, ...config }).then((res: AxiosRequestConfig) => {\n            return {\n                ...res.data\n            } as ApiResponse<T>;\n        });\n        return result;\n    };\n\n    return { get, post };\n};\n\nexport default useRequest;"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,OAAO;AAgB9B,MAAMC,UAAU,GAAGA,CAAA,KAAmB;EAAAC,EAAA;EAClC,MAAMC,aAAa,GAAGH,MAAM,CAAqB;IAC7CI,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAG,MAAAA,CAAmBC,GAAW,EAAEC,IAAa,EAAEC,MAA2B,KAAK;IACxF,MAAMC,MAAM,GAAG,MAAMV,KAAK,CAACM,IAAI,CAACC,GAAG,EAAEC,IAAI,EAAE;MAAE,GAAGJ,aAAa;MAAE,GAAGK;IAAO,CAAC,CAAC,CAACE,IAAI,CAAEC,GAAuB,IAAK;MAC1G,OAAO;QACH,GAAGA,GAAG,CAACJ;MACX,CAAC;IACL,CAAC,CAAC;IACF,OAAOE,MAAM;EACjB,CAAC;EAED,MAAMG,GAAG,GAAG,MAAAA,CAAmBN,GAAW,EAAEE,MAA2B,KAAK;IACxE,MAAMC,MAAM,GAAG,MAAMV,KAAK,CAACa,GAAG,CAACN,GAAG,EAAE;MAAE,GAAGH,aAAa,CAACU,OAAO;MAAE,GAAGL;IAAO,CAAC,CAAC,CAACE,IAAI,CAAEC,GAAuB,IAAK;MAC3G,OAAO;QACH,GAAGA,GAAG,CAACJ;MACX,CAAC;IACL,CAAC,CAAC;IACF,OAAOE,MAAM;EACjB,CAAC;EAED,OAAO;IAAEG,GAAG;IAAEP;EAAK,CAAC;AACxB,CAAC;AAACH,EAAA,CA1BID,UAAU;AA4BhB,eAAeA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}
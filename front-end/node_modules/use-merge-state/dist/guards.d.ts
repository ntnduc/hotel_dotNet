import { PlainFunction, PlainObject, Unpack } from "./types";
export declare const isArray: (arg: any) => arg is any[];
export declare function isFunction<T extends PlainFunction>(value: T | unknown): value is PlainFunction<Unpack<Parameters<T>>, ReturnType<T>>;
export declare function isMap<T, U>(value: Map<T, U> | unknown): value is Map<T, U>;
export declare function isNumber(value: number | unknown): value is number;
export declare function isPlainObject<T, U extends PlainObject>(value: PlainObject<T> | U | unknown): value is PlainObject<T> | U;
export declare function isSet<T>(value: Set<T> | unknown): value is Set<T>;
